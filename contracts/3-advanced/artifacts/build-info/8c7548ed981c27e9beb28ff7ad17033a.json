{
	"id": "8c7548ed981c27e9beb28ff7ad17033a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/3-advanced/10-assembly.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >= 0.7.0 < 0.9.0;\n\n\n/*\n\nSolidity provides an option to use assembly language to write inline assembly within Solidity source code.\n\nAssembly is a low level language that allows you to directly manipulate the EVM (more dangerous and not recommended)\n\nEVM = smart contracts are not the real code in the blockchain - solidity code is compiled to a lower level language\n*/\n\n\ncontract LearnAssembly{\n    function addToEVM() external{\n        uint x;\n        uint y;\n        // uint z = x + y;\n\n        assembly{\n\n        // declares an assembly block\n        // inside we can manipulate variables declared outside\n        // no semi colon, = is actually := and we can bring in opcodes\n            let z := add(x, y)\n\n            // if functions for\n\n            // load data for a specific slot\n            let a:= mload(0x40)\n\n            // store something temporarily to memory\n            mstore(a, 4)\n\n            // persistance storage!\n            sstore(a, 100)\n        }\n    }\n        // in EVM everything is stored in slots of 256 bits\n\n    function addToEVM2() public view returns(bool success){\n            uint size;\n            address addr;\n            // check whether an address contains any bytes of code or not\n            assembly{\n                size := extcodesize(addr)\n            }\n\n            if(size <= 0){\n                return true;\n            } else{\n                return false;\n            }\n    }\n\n    // all of this is compiled to low level instructions (opcodes - in total there is around 100)\n\n    // how the heck do we use assembly??\n\n\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/3-advanced/10-assembly.sol": {
				"LearnAssembly": {
					"abi": [
						{
							"inputs": [],
							"name": "addToEVM",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "addToEVM2",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/3-advanced/10-assembly.sol\":420:1623  contract LearnAssembly{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/3-advanced/10-assembly.sol\":420:1623  contract LearnAssembly{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4fee737f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xdadf8fee\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/3-advanced/10-assembly.sol\":1095:1478  function addToEVM2() public view returns(bool success){... */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/3-advanced/10-assembly.sol\":448:1029  function addToEVM() external{... */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      stop\n        /* \"contracts/3-advanced/10-assembly.sol\":1095:1478  function addToEVM2() public view returns(bool success){... */\n    tag_6:\n        /* \"contracts/3-advanced/10-assembly.sol\":1136:1148  bool success */\n      0x00\n        /* \"contracts/3-advanced/10-assembly.sol\":1163:1172  uint size */\n      dup1\n        /* \"contracts/3-advanced/10-assembly.sol\":1186:1198  address addr */\n      0x00\n        /* \"contracts/3-advanced/10-assembly.sol\":1332:1336  addr */\n      dup1\n        /* \"contracts/3-advanced/10-assembly.sol\":1320:1337  extcodesize(addr) */\n      extcodesize\n        /* \"contracts/3-advanced/10-assembly.sol\":1312:1337  size := extcodesize(addr) */\n      swap2\n      pop\n        /* \"contracts/3-advanced/10-assembly.sol\":1376:1377  0 */\n      0x00\n        /* \"contracts/3-advanced/10-assembly.sol\":1368:1372  size */\n      dup3\n        /* \"contracts/3-advanced/10-assembly.sol\":1368:1377  size <= 0 */\n      gt\n        /* \"contracts/3-advanced/10-assembly.sol\":1365:1472  if(size <= 0){... */\n      tag_12\n      jumpi\n        /* \"contracts/3-advanced/10-assembly.sol\":1403:1407  true */\n      0x01\n        /* \"contracts/3-advanced/10-assembly.sol\":1396:1407  return true */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_11)\n        /* \"contracts/3-advanced/10-assembly.sol\":1365:1472  if(size <= 0){... */\n    tag_12:\n        /* \"contracts/3-advanced/10-assembly.sol\":1452:1457  false */\n      0x00\n        /* \"contracts/3-advanced/10-assembly.sol\":1445:1457  return false */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/3-advanced/10-assembly.sol\":1095:1478  function addToEVM2() public view returns(bool success){... */\n    tag_11:\n      swap1\n      jump\t// out\n        /* \"contracts/3-advanced/10-assembly.sol\":448:1029  function addToEVM() external{... */\n    tag_10:\n        /* \"contracts/3-advanced/10-assembly.sol\":486:492  uint x */\n      0x00\n        /* \"contracts/3-advanced/10-assembly.sol\":502:508  uint y */\n      dup1\n        /* \"contracts/3-advanced/10-assembly.sol\":757:758  y */\n      dup1\n        /* \"contracts/3-advanced/10-assembly.sol\":754:755  x */\n      dup3\n        /* \"contracts/3-advanced/10-assembly.sol\":750:759  add(x, y) */\n      add\n        /* \"contracts/3-advanced/10-assembly.sol\":865:869  0x40 */\n      0x40\n        /* \"contracts/3-advanced/10-assembly.sol\":859:870  mload(0x40) */\n      mload\n        /* \"contracts/3-advanced/10-assembly.sol\":947:948  4 */\n      0x04\n        /* \"contracts/3-advanced/10-assembly.sol\":944:945  a */\n      dup2\n        /* \"contracts/3-advanced/10-assembly.sol\":937:949  mstore(a, 4) */\n      mstore\n        /* \"contracts/3-advanced/10-assembly.sol\":1009:1012  100 */\n      0x64\n        /* \"contracts/3-advanced/10-assembly.sol\":1006:1007  a */\n      dup2\n        /* \"contracts/3-advanced/10-assembly.sol\":999:1013  sstore(a, 100) */\n      sstore\n        /* \"contracts/3-advanced/10-assembly.sol\":554:1023  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/3-advanced/10-assembly.sol\":448:1029  function addToEVM() external{... */\n      jump\t// out\n        /* \"#utility.yul\":7:97   */\n    tag_15:\n        /* \"#utility.yul\":41:48   */\n      0x00\n        /* \"#utility.yul\":84:89   */\n      dup2\n        /* \"#utility.yul\":77:90   */\n      iszero\n        /* \"#utility.yul\":70:91   */\n      iszero\n        /* \"#utility.yul\":59:91   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:97   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":103:212   */\n    tag_16:\n        /* \"#utility.yul\":184:205   */\n      tag_20\n        /* \"#utility.yul\":199:204   */\n      dup2\n        /* \"#utility.yul\":184:205   */\n      tag_15\n      jump\t// in\n    tag_20:\n        /* \"#utility.yul\":179:182   */\n      dup3\n        /* \"#utility.yul\":172:206   */\n      mstore\n        /* \"#utility.yul\":103:212   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":218:428   */\n    tag_8:\n        /* \"#utility.yul\":305:309   */\n      0x00\n        /* \"#utility.yul\":343:345   */\n      0x20\n        /* \"#utility.yul\":332:341   */\n      dup3\n        /* \"#utility.yul\":328:346   */\n      add\n        /* \"#utility.yul\":320:346   */\n      swap1\n      pop\n        /* \"#utility.yul\":356:421   */\n      tag_22\n        /* \"#utility.yul\":418:419   */\n      0x00\n        /* \"#utility.yul\":407:416   */\n      dup4\n        /* \"#utility.yul\":403:420   */\n      add\n        /* \"#utility.yul\":394:400   */\n      dup5\n        /* \"#utility.yul\":356:421   */\n      tag_16\n      jump\t// in\n    tag_22:\n        /* \"#utility.yul\":218:428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e83188670d4c27a47cea40ba0fefefca42b3a1131535b8e5270002969bbf0ba064736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b5060f18061001b5f395ff3fe6080604052348015600e575f80fd5b50600436106030575f3560e01c80634fee737f146034578063dadf8fee14604e575b5f80fd5b603a6056565b6040516045919060a4565b60405180910390f35b60546076565b005b5f805f803b91505f8211606d576001925050506073565b5f925050505b90565b5f80808201604051600481526064815550505050565b5f8115159050919050565b609e81608c565b82525050565b5f60208201905060b55f8301846097565b9291505056fea2646970667358221220e83188670d4c27a47cea40ba0fefefca42b3a1131535b8e5270002969bbf0ba064736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xF1 DUP1 PUSH2 0x1B PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x30 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4FEE737F EQ PUSH1 0x34 JUMPI DUP1 PUSH4 0xDADF8FEE EQ PUSH1 0x4E JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x3A PUSH1 0x56 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x45 SWAP2 SWAP1 PUSH1 0xA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x54 PUSH1 0x76 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 EXTCODESIZE SWAP2 POP PUSH0 DUP3 GT PUSH1 0x6D JUMPI PUSH1 0x1 SWAP3 POP POP POP PUSH1 0x73 JUMP JUMPDEST PUSH0 SWAP3 POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH0 DUP1 DUP1 DUP3 ADD PUSH1 0x40 MLOAD PUSH1 0x4 DUP2 MSTORE PUSH1 0x64 DUP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x9E DUP2 PUSH1 0x8C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xB5 PUSH0 DUP4 ADD DUP5 PUSH1 0x97 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 BALANCE DUP9 PUSH8 0xD4C27A47CEA40BA 0xF 0xEF 0xEF 0xCA TIMESTAMP 0xB3 LOG1 SGT ISZERO CALLDATALOAD 0xB8 0xE5 0x27 STOP MUL SWAP7 SWAP12 0xBF SIGNEXTEND LOG0 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "420:1203:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@addToEVM2_35": {
									"entryPoint": 86,
									"id": 35,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@addToEVM_12": {
									"entryPoint": 118,
									"id": 12,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 151,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 164,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 140,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:431:1",
										"nodeType": "YulBlock",
										"src": "0:431:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "49:48:1",
													"nodeType": "YulBlock",
													"src": "49:48:1",
													"statements": [
														{
															"nativeSrc": "59:32:1",
															"nodeType": "YulAssignment",
															"src": "59:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "84:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "84:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "77:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "77:6:1"
																		},
																		"nativeSrc": "77:13:1",
																		"nodeType": "YulFunctionCall",
																		"src": "77:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "70:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "70:6:1"
																},
																"nativeSrc": "70:21:1",
																"nodeType": "YulFunctionCall",
																"src": "70:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "59:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "59:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "7:90:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "31:5:1",
														"nodeType": "YulTypedName",
														"src": "31:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "41:7:1",
														"nodeType": "YulTypedName",
														"src": "41:7:1",
														"type": ""
													}
												],
												"src": "7:90:1"
											},
											{
												"body": {
													"nativeSrc": "162:50:1",
													"nodeType": "YulBlock",
													"src": "162:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "179:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "179:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "199:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "199:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "184:14:1",
																			"nodeType": "YulIdentifier",
																			"src": "184:14:1"
																		},
																		"nativeSrc": "184:21:1",
																		"nodeType": "YulFunctionCall",
																		"src": "184:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "172:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "172:6:1"
																},
																"nativeSrc": "172:34:1",
																"nodeType": "YulFunctionCall",
																"src": "172:34:1"
															},
															"nativeSrc": "172:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "172:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "103:109:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "150:5:1",
														"nodeType": "YulTypedName",
														"src": "150:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "157:3:1",
														"nodeType": "YulTypedName",
														"src": "157:3:1",
														"type": ""
													}
												],
												"src": "103:109:1"
											},
											{
												"body": {
													"nativeSrc": "310:118:1",
													"nodeType": "YulBlock",
													"src": "310:118:1",
													"statements": [
														{
															"nativeSrc": "320:26:1",
															"nodeType": "YulAssignment",
															"src": "320:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "332:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "332:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "343:2:1",
																		"nodeType": "YulLiteral",
																		"src": "343:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "328:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "328:3:1"
																},
																"nativeSrc": "328:18:1",
																"nodeType": "YulFunctionCall",
																"src": "328:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "320:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "320:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "394:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "394:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "407:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "407:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "418:1:1",
																				"nodeType": "YulLiteral",
																				"src": "418:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "403:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "403:3:1"
																		},
																		"nativeSrc": "403:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "403:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "356:37:1",
																	"nodeType": "YulIdentifier",
																	"src": "356:37:1"
																},
																"nativeSrc": "356:65:1",
																"nodeType": "YulFunctionCall",
																"src": "356:65:1"
															},
															"nativeSrc": "356:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "356:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "218:210:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "282:9:1",
														"nodeType": "YulTypedName",
														"src": "282:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "294:6:1",
														"nodeType": "YulTypedName",
														"src": "294:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "305:4:1",
														"nodeType": "YulTypedName",
														"src": "305:4:1",
														"type": ""
													}
												],
												"src": "218:210:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50600436106030575f3560e01c80634fee737f146034578063dadf8fee14604e575b5f80fd5b603a6056565b6040516045919060a4565b60405180910390f35b60546076565b005b5f805f803b91505f8211606d576001925050506073565b5f925050505b90565b5f80808201604051600481526064815550505050565b5f8115159050919050565b609e81608c565b82525050565b5f60208201905060b55f8301846097565b9291505056fea2646970667358221220e83188670d4c27a47cea40ba0fefefca42b3a1131535b8e5270002969bbf0ba064736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x30 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4FEE737F EQ PUSH1 0x34 JUMPI DUP1 PUSH4 0xDADF8FEE EQ PUSH1 0x4E JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x3A PUSH1 0x56 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x45 SWAP2 SWAP1 PUSH1 0xA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x54 PUSH1 0x76 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 EXTCODESIZE SWAP2 POP PUSH0 DUP3 GT PUSH1 0x6D JUMPI PUSH1 0x1 SWAP3 POP POP POP PUSH1 0x73 JUMP JUMPDEST PUSH0 SWAP3 POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH0 DUP1 DUP1 DUP3 ADD PUSH1 0x40 MLOAD PUSH1 0x4 DUP2 MSTORE PUSH1 0x64 DUP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x9E DUP2 PUSH1 0x8C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xB5 PUSH0 DUP4 ADD DUP5 PUSH1 0x97 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 BALANCE DUP9 PUSH8 0xD4C27A47CEA40BA 0xF 0xEF 0xEF 0xCA TIMESTAMP 0xB3 LOG1 SGT ISZERO CALLDATALOAD 0xB8 0xE5 0x27 STOP MUL SWAP7 SWAP12 0xBF SIGNEXTEND LOG0 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "420:1203:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1095:383;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;448:581;;;:::i;:::-;;1095:383;1136:12;1163:9;1186:12;1332:4;1320:17;1312:25;;1376:1;1368:4;:9;1365:107;;1403:4;1396:11;;;;;;1365:107;1452:5;1445:12;;;;1095:383;;:::o;448:581::-;486:6;502;757:1;754;750:9;865:4;859:11;947:1;944;937:12;1009:3;1006:1;999:14;554:469;;;;448:581::o;7:90:1:-;41:7;84:5;77:13;70:21;59:32;;7:90;;;:::o;103:109::-;184:21;199:5;184:21;:::i;:::-;179:3;172:34;103:109;;:::o;218:210::-;305:4;343:2;332:9;328:18;320:26;;356:65;418:1;407:9;403:17;394:6;356:65;:::i;:::-;218:210;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "48200",
								"executionCost": "97",
								"totalCost": "48297"
							},
							"external": {
								"addToEVM()": "22292",
								"addToEVM2()": "2966"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 420,
									"end": 1623,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 420,
									"end": 1623,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 420,
									"end": 1623,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 420,
									"end": 1623,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 420,
									"end": 1623,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 420,
									"end": 1623,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 420,
									"end": 1623,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 420,
									"end": 1623,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 420,
									"end": 1623,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 420,
									"end": 1623,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 420,
									"end": 1623,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 420,
									"end": 1623,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 420,
									"end": 1623,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 420,
									"end": 1623,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 420,
									"end": 1623,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 420,
									"end": 1623,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 420,
									"end": 1623,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 420,
									"end": 1623,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 420,
									"end": 1623,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 420,
									"end": 1623,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 420,
									"end": 1623,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e83188670d4c27a47cea40ba0fefefca42b3a1131535b8e5270002969bbf0ba064736f6c634300081a0033",
									".code": [
										{
											"begin": 420,
											"end": 1623,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 420,
											"end": 1623,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 420,
											"end": 1623,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 420,
											"end": 1623,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 420,
											"end": 1623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 420,
											"end": 1623,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 420,
											"end": 1623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 420,
											"end": 1623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 420,
											"end": 1623,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 420,
											"end": 1623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 420,
											"end": 1623,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 420,
											"end": 1623,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 420,
											"end": 1623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 420,
											"end": 1623,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 420,
											"end": 1623,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 420,
											"end": 1623,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 420,
											"end": 1623,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 420,
											"end": 1623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 420,
											"end": 1623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 420,
											"end": 1623,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 420,
											"end": 1623,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 420,
											"end": 1623,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 420,
											"end": 1623,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 420,
											"end": 1623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 420,
											"end": 1623,
											"name": "PUSH",
											"source": 0,
											"value": "4FEE737F"
										},
										{
											"begin": 420,
											"end": 1623,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 420,
											"end": 1623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 420,
											"end": 1623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 420,
											"end": 1623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 420,
											"end": 1623,
											"name": "PUSH",
											"source": 0,
											"value": "DADF8FEE"
										},
										{
											"begin": 420,
											"end": 1623,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 420,
											"end": 1623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 420,
											"end": 1623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 420,
											"end": 1623,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 420,
											"end": 1623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 420,
											"end": 1623,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 420,
											"end": 1623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 420,
											"end": 1623,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1095,
											"end": 1478,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1095,
											"end": 1478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1095,
											"end": 1478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1095,
											"end": 1478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1095,
											"end": 1478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1095,
											"end": 1478,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1095,
											"end": 1478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1095,
											"end": 1478,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1095,
											"end": 1478,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1095,
											"end": 1478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1095,
											"end": 1478,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1095,
											"end": 1478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1095,
											"end": 1478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1095,
											"end": 1478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1095,
											"end": 1478,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1095,
											"end": 1478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1095,
											"end": 1478,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1095,
											"end": 1478,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1095,
											"end": 1478,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1095,
											"end": 1478,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1095,
											"end": 1478,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1095,
											"end": 1478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1095,
											"end": 1478,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 448,
											"end": 1029,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 448,
											"end": 1029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 448,
											"end": 1029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 448,
											"end": 1029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 448,
											"end": 1029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 448,
											"end": 1029,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 448,
											"end": 1029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 448,
											"end": 1029,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1095,
											"end": 1478,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1095,
											"end": 1478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1148,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1163,
											"end": 1172,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1186,
											"end": 1198,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1332,
											"end": 1336,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1320,
											"end": 1337,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 1312,
											"end": 1337,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1312,
											"end": 1337,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1376,
											"end": 1377,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1368,
											"end": 1372,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1377,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1365,
											"end": 1472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1365,
											"end": 1472,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 1407,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1396,
											"end": 1407,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1407,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1407,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1407,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1396,
											"end": 1407,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1365,
											"end": 1472,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1365,
											"end": 1472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1452,
											"end": 1457,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1445,
											"end": 1457,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1445,
											"end": 1457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1445,
											"end": 1457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1445,
											"end": 1457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1095,
											"end": 1478,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1095,
											"end": 1478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1095,
											"end": 1478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1095,
											"end": 1478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 448,
											"end": 1029,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 448,
											"end": 1029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 486,
											"end": 492,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 757,
											"end": 758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 754,
											"end": 755,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 750,
											"end": 759,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 865,
											"end": 869,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 859,
											"end": 870,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 947,
											"end": 948,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 944,
											"end": 945,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 937,
											"end": 949,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1009,
											"end": 1012,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1006,
											"end": 1007,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 999,
											"end": 1013,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 554,
											"end": 1023,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 554,
											"end": 1023,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 554,
											"end": 1023,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 554,
											"end": 1023,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 448,
											"end": 1029,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 97,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 7,
											"end": 97,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 41,
											"end": 48,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 89,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 77,
											"end": 90,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 70,
											"end": 91,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 59,
											"end": 91,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 59,
											"end": 91,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 103,
											"end": 212,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 103,
											"end": 212,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 184,
											"end": 205,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 199,
											"end": 204,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 184,
											"end": 205,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 184,
											"end": 205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 184,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 179,
											"end": 182,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 172,
											"end": 206,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 103,
											"end": 212,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 103,
											"end": 212,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 103,
											"end": 212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 218,
											"end": 428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 305,
											"end": 309,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 343,
											"end": 345,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 332,
											"end": 341,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 328,
											"end": 346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 320,
											"end": 346,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 320,
											"end": 346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 356,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 418,
											"end": 419,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 407,
											"end": 416,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 403,
											"end": 420,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 394,
											"end": 400,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 356,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 356,
											"end": 421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 356,
											"end": 421,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 356,
											"end": 421,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/3-advanced/10-assembly.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addToEVM()": "dadf8fee",
							"addToEVM2()": "4fee737f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"addToEVM\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"addToEVM2\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/3-advanced/10-assembly.sol\":\"LearnAssembly\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/3-advanced/10-assembly.sol\":{\"keccak256\":\"0xbeab1320de4d82d493df11caab371e98c13b9b45bf37fa5116404b3e3be4f25b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://534cf0cda64d662e97e428b9b6ddc7610cfdbfd35f5b73b5cb5aebdb3c410b7e\",\"dweb:/ipfs/QmUn6xMcT3K1FgWKM7yj4yksY5wU7o7PnfaLhNyqQTJEaz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/3-advanced/10-assembly.sol": {
				"ast": {
					"absolutePath": "contracts/3-advanced/10-assembly.sol",
					"exportedSymbols": {
						"LearnAssembly": [
							36
						]
					},
					"id": 37,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:33:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "LearnAssembly",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 36,
							"linearizedBaseContracts": [
								36
							],
							"name": "LearnAssembly",
							"nameLocation": "429:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 11,
										"nodeType": "Block",
										"src": "476:553:0",
										"statements": [
											{
												"assignments": [
													5
												],
												"declarations": [
													{
														"constant": false,
														"id": 5,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "491:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 11,
														"src": "486:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 4,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "486:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 6,
												"nodeType": "VariableDeclarationStatement",
												"src": "486:6:0"
											},
											{
												"assignments": [
													8
												],
												"declarations": [
													{
														"constant": false,
														"id": 8,
														"mutability": "mutable",
														"name": "y",
														"nameLocation": "507:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 11,
														"src": "502:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 7,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "502:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 9,
												"nodeType": "VariableDeclarationStatement",
												"src": "502:6:0"
											},
											{
												"AST": {
													"nativeSrc": "554:469:0",
													"nodeType": "YulBlock",
													"src": "554:469:0",
													"statements": [
														{
															"nativeSrc": "741:18:0",
															"nodeType": "YulVariableDeclaration",
															"src": "741:18:0",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "754:1:0",
																		"nodeType": "YulIdentifier",
																		"src": "754:1:0"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "757:1:0",
																		"nodeType": "YulIdentifier",
																		"src": "757:1:0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "750:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "750:3:0"
																},
																"nativeSrc": "750:9:0",
																"nodeType": "YulFunctionCall",
																"src": "750:9:0"
															},
															"variables": [
																{
																	"name": "z",
																	"nativeSrc": "745:1:0",
																	"nodeType": "YulTypedName",
																	"src": "745:1:0",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "851:19:0",
															"nodeType": "YulVariableDeclaration",
															"src": "851:19:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "865:4:0",
																		"nodeType": "YulLiteral",
																		"src": "865:4:0",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "859:5:0",
																	"nodeType": "YulIdentifier",
																	"src": "859:5:0"
																},
																"nativeSrc": "859:11:0",
																"nodeType": "YulFunctionCall",
																"src": "859:11:0"
															},
															"variables": [
																{
																	"name": "a",
																	"nativeSrc": "855:1:0",
																	"nodeType": "YulTypedName",
																	"src": "855:1:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "a",
																		"nativeSrc": "944:1:0",
																		"nodeType": "YulIdentifier",
																		"src": "944:1:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "947:1:0",
																		"nodeType": "YulLiteral",
																		"src": "947:1:0",
																		"type": "",
																		"value": "4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "937:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "937:6:0"
																},
																"nativeSrc": "937:12:0",
																"nodeType": "YulFunctionCall",
																"src": "937:12:0"
															},
															"nativeSrc": "937:12:0",
															"nodeType": "YulExpressionStatement",
															"src": "937:12:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "a",
																		"nativeSrc": "1006:1:0",
																		"nodeType": "YulIdentifier",
																		"src": "1006:1:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1009:3:0",
																		"nodeType": "YulLiteral",
																		"src": "1009:3:0",
																		"type": "",
																		"value": "100"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "999:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "999:6:0"
																},
																"nativeSrc": "999:14:0",
																"nodeType": "YulFunctionCall",
																"src": "999:14:0"
															},
															"nativeSrc": "999:14:0",
															"nodeType": "YulExpressionStatement",
															"src": "999:14:0"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 5,
														"isOffset": false,
														"isSlot": false,
														"src": "754:1:0",
														"valueSize": 1
													},
													{
														"declaration": 8,
														"isOffset": false,
														"isSlot": false,
														"src": "757:1:0",
														"valueSize": 1
													}
												],
												"id": 10,
												"nodeType": "InlineAssembly",
												"src": "546:477:0"
											}
										]
									},
									"functionSelector": "dadf8fee",
									"id": 12,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addToEVM",
									"nameLocation": "457:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "465:2:0"
									},
									"returnParameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "476:0:0"
									},
									"scope": 36,
									"src": "448:581:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 34,
										"nodeType": "Block",
										"src": "1149:329:0",
										"statements": [
											{
												"assignments": [
													18
												],
												"declarations": [
													{
														"constant": false,
														"id": 18,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "1168:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 34,
														"src": "1163:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 17,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1163:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 19,
												"nodeType": "VariableDeclarationStatement",
												"src": "1163:9:0"
											},
											{
												"assignments": [
													21
												],
												"declarations": [
													{
														"constant": false,
														"id": 21,
														"mutability": "mutable",
														"name": "addr",
														"nameLocation": "1194:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 34,
														"src": "1186:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 20,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1186:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 22,
												"nodeType": "VariableDeclarationStatement",
												"src": "1186:12:0"
											},
											{
												"AST": {
													"nativeSrc": "1294:57:0",
													"nodeType": "YulBlock",
													"src": "1294:57:0",
													"statements": [
														{
															"nativeSrc": "1312:25:0",
															"nodeType": "YulAssignment",
															"src": "1312:25:0",
															"value": {
																"arguments": [
																	{
																		"name": "addr",
																		"nativeSrc": "1332:4:0",
																		"nodeType": "YulIdentifier",
																		"src": "1332:4:0"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nativeSrc": "1320:11:0",
																	"nodeType": "YulIdentifier",
																	"src": "1320:11:0"
																},
																"nativeSrc": "1320:17:0",
																"nodeType": "YulFunctionCall",
																"src": "1320:17:0"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1312:4:0",
																	"nodeType": "YulIdentifier",
																	"src": "1312:4:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 21,
														"isOffset": false,
														"isSlot": false,
														"src": "1332:4:0",
														"valueSize": 1
													},
													{
														"declaration": 18,
														"isOffset": false,
														"isSlot": false,
														"src": "1312:4:0",
														"valueSize": 1
													}
												],
												"id": 23,
												"nodeType": "InlineAssembly",
												"src": "1286:65:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 24,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "1368:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 25,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1376:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1368:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 32,
													"nodeType": "Block",
													"src": "1427:45:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 30,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1452:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 16,
															"id": 31,
															"nodeType": "Return",
															"src": "1445:12:0"
														}
													]
												},
												"id": 33,
												"nodeType": "IfStatement",
												"src": "1365:107:0",
												"trueBody": {
													"id": 29,
													"nodeType": "Block",
													"src": "1378:44:0",
													"statements": [
														{
															"expression": {
																"hexValue": "74727565",
																"id": 27,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1403:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 16,
															"id": 28,
															"nodeType": "Return",
															"src": "1396:11:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "4fee737f",
									"id": 35,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addToEVM2",
									"nameLocation": "1104:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1113:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "1141:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1136:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 14,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1136:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1135:14:0"
									},
									"scope": 36,
									"src": "1095:383:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 37,
							"src": "420:1203:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:1590:0"
				},
				"id": 0
			}
		}
	}
}